@model CECRunningChart.Web.Models.Runningchart.RunningchartModel
@{
    ViewBag.Title = "New Running Chart";
}

<style type="text/css">
    table tr td input[type="text"]
    {
        width: 110px;
    }
</style>
<link rel="stylesheet" href="@Url.Content("~/Content/themes/base/jquery.ui.timepicker.css")" type="text/css" />
<script src="@Url.Content("~/Scripts/ui/jquery.ui.core.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/ui/jquery.ui.widget.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/ui/jquery.ui.datepicker.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/ui/jquery.ui.timepicker.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {
        $("#BillDate").datepicker({
            changeMonth: true,
            changeYear: true
        });

        setTimePickers();

        $.validator.addMethod("selectVehicleId", function (value, element) {
            return value > 0;
        }, " *");

        $("#runningchartform").submit(function () {
            var isValid = $("#runningchartform").valid();
            var isLubValid = isLubricantsValid();
            var isPumpValid = isPumpstationsValid();
            var isItemsValid = isChartDetailsValid();

            return isValid || isLubValid || isPumpValid || isItemsValid;
        });

        $("#runningchartform").validate({
            rules: {
                BillNumber: {
                    required: true,
                    maxlength: 10
                },
                BillDate: {
                    required: true
                },
                DriverName: {
                    required: true,
                    maxlength: 200
                },
                SelectedVehicleId: {
                    required: true,
                    selectVehicleId: true
                },
                DayStartime: {
                    required: true
                },
                DayEndTime: {
                    required: true
                },
                FuelLeftBegningOfDay: {
                    required: true,
                    number: true
                },
                FuelLeftEndOfDay: {
                    required: true,
                    number: true
                },
                FuelUsageOfDay: {
                    required: true,
                    number: true
                }
            },
            messages: {
                BillNumber: " *",
                BillDate: " *",
                DriverName: " *",
                SelectedVehicleId: " *",
                DayStartime: " *",
                DayEndTime: " *",
                FuelLeftBegningOfDay: {
                    required: " *",
                    number: " Please enter a valid number"
                },
                FuelLeftEndOfDay: {
                    required: " *",
                    number: " Please enter a valid number"
                },
                FuelUsageOfDay: {
                    required: " *",
                    number: " Please enter a valid number"
                }
            }
        });

        $("#FuelLeftEndOfDay").keyup(function () {
            var fuelLeftBOD = $.trim($("#FuelLeftBegningOfDay").val());
            var fuelLeftEOD = $.trim($(this).val());
            if (fuelLeftBOD == "" || fuelLeftEOD == "") {
                return;
            }

            var pumpstationCount = $("#PumpstationsCount").val();
            var pumpQty = 0;
            for (var i = 0; i < pumpstationCount; i++) {
                var qty = parseFloat(document.getElementById("SelectedPumpstations[" + i + "].PumpAmount").value);
                pumpQty += qty;
            }

            var fuelUsage = (parseFloat(fuelLeftBOD) + pumpQty) - parseFloat(fuelLeftEOD);
            $("#FuelUsageOfDay").val(fuelUsage);
        });
    });

    function setTimePickers() {
        $('.timepick').timepicker({
            showPeriod: true,
            showLeadingZero: true
        });
    }

    function isLubricantsValid() {
        var isValid = true;
        var lubriCount = $("#LubricantstationsCount").val();
        for (var i = 0; i < lubriCount; i++) {
            document.getElementById("LubricantPumpstationError" + i).style.display = "none";
            document.getElementById("LubricantLubricantError" + i).style.display = "none";
            document.getElementById("LubricantQuantityError" + i).style.display = "none";

            var pumpIndex = document.getElementById("SelectedLubricants[" + i + "].SelectedPumpstationId").selectedIndex;
            var libriIndex = document.getElementById("SelectedLubricants[" + i + "].SelectedLubricantTypeId").selectedIndex;
            var pumpQty = document.getElementById("SelectedLubricants[" + i + "].PumpAmount").value;

            if (pumpIndex <= 0) {
                isValid = false;
                document.getElementById("LubricantPumpstationError" + i).style.display = "block";
            }
            if (libriIndex <= 0) {
                isValid = false;
                document.getElementById("LubricantLubricantError" + i).style.display = "block";
            }
            if ($.trim(pumpQty) == "") {
                isValid = false;
                document.getElementById("LubricantQuantityError" + i).style.display = "block";
            }
        }
        return isValid;
    }

    function isPumpstationsValid() {
        var isValid = true;
        var pumpstationCount = $("#PumpstationsCount").val();
        for (var i = 0; i < pumpstationCount; i++) {
            document.getElementById("PumpstationPumpstationError" + i).style.display = "none";
            document.getElementById("PumpstationQtyError" + i).style.display = "none";

            var pumpIndex = document.getElementById("SelectedPumpstations[" + i + "].SelectedPumpstationId").selectedIndex;
            var pumpQty = document.getElementById("SelectedPumpstations[" + i + "].PumpAmount").value;

            if (pumpIndex <= 0) {
                isValid = false;
                document.getElementById("PumpstationPumpstationError" + i).style.display = "block";
            }
            if ($.trim(pumpQty) == "") {
                isValid = false;
                document.getElementById("PumpstationQtyError" + i).style.display = "block";
            }
        }
        return isValid;
    }

    function isChartDetailsValid() {
        var isValid = true;
        var itemCount = $("#ChartItemsCount").val();
        for (var i = 0; i < itemCount; i++) {
            document.getElementById("ChartItemStartTimeError" + i).style.display = "none";
            document.getElementById("ChartItemEndTimeError" + i).style.display = "none";
            document.getElementById("ChartItemTimeDiffError" + i).style.display = "none";
            document.getElementById("ChartItemStartMeterError" + i).style.display = "none";
            document.getElementById("ChartItemEndMeterError" + i).style.display = "none";
            document.getElementById("ChartItemMeterDiffError" + i).style.display = "none";
            document.getElementById("ChartItemIdleHrsError" + i).style.display = "none";
            document.getElementById("ChartItemProjectError" + i).style.display = "none";
            document.getElementById("ChartItemProjectMgrError" + i).style.display = "none";
            document.getElementById("ChartItemRentleError" + i).style.display = "none";

            var startTime = document.getElementById("SelectedChartItems[" + i + "].StartTime").value;
            var endTime = document.getElementById("SelectedChartItems[" + i + "].EndTime").value;
            var timeDifference = document.getElementById("SelectedChartItems[" + i + "].TimeDifference").value;
            var startMeter = document.getElementById("SelectedChartItems[" + i + "].StartMeter").value;
            var endMeter = document.getElementById("SelectedChartItems[" + i + "].EndMeter").value;
            var meterDifference = document.getElementById("SelectedChartItems[" + i + "].MeterDifference").value;
            var idleHours = document.getElementById("SelectedChartItems[" + i + "].IdleHours").value;
            var selectedProjectId = document.getElementById("SelectedChartItems[" + i + "].SelectedProjectId").selectedIndex;
            var selectedRentalTypeId = document.getElementById("SelectedChartItems[" + i + "].SelectedRentalTypeId").selectedIndex;
            var pm = document.getElementById("SelectedChartItems[" + i + "].SelectedProjectManager").value;

            if ($.trim(startTime) == "") {
                isValid = false;
                document.getElementById("ChartItemStartTimeError" + i).style.display = "block";
            }
            if ($.trim(endTime) == "") {
                isValid = false;
                document.getElementById("ChartItemEndTimeError" + i).style.display = "block";
            }
            if ($.trim(timeDifference) == "") {
                isValid = false;
                document.getElementById("ChartItemTimeDiffError" + i).style.display = "block";
            }
            if ($.trim(startMeter) == "") {
                isValid = false;
                document.getElementById("ChartItemStartMeterError" + i).style.display = "block";
            }
            if ($.trim(endMeter) == "") {
                isValid = false;
                document.getElementById("ChartItemEndMeterError" + i).style.display = "block";
            }
            if ($.trim(meterDifference) == "") {
                isValid = false;
                document.getElementById("ChartItemMeterDiffError" + i).style.display = "block";
            }
            if ($.trim(idleHours) == "") {
                isValid = false;
                document.getElementById("ChartItemIdleHrsError" + i).style.display = "block";
            }
            if ($.trim(pm) == "") {
                isValid = false;
                document.getElementById("ChartItemProjectMgrError" + i).style.display = "block";
            }
            if (selectedProjectId <= 0) {
                isValid = false;
                document.getElementById("ChartItemProjectError" + i).style.display = "block";
            }
            if (selectedRentalTypeId <= 0) {
                isValid = false;
                document.getElementById("ChartItemRentleError" + i).style.display = "block";
            }
        }
        return isValid;
    }
</script>

@using (Html.BeginForm("create", "runningchart", FormMethod.Post, new { @id = "runningchartform"}))
{
    <h2>New Running Chart</h2>
    <div id="BasicInfo">
        <table>
            <tr>
                @*<td>Running Chart #</td>
                <td><input type="text" id="RunningchartId" name="RunningchartId" value="@Model.RunningchartId" /></td>*@
                <td>&nbsp;</td>
                <td>&nbsp;</td>
                <td>Bill Number</td>
                <td><input type="text" id="BillNumber" name="BillNumber" maxlength="10" /></td>
            </tr>
            <tr>
                <td>Date</td>
                <td><input type="text" id="BillDate" name="BillDate" value="@Model.BillDate.ToString("d")" /></td>
                <td>Driver Name</td>
                <td><input type="text" id="DriverName" name="DriverName" maxlength="200" /></td>
            </tr>
            <tr>
                <td>Vehicle #</td>
                <td>
                    @Html.DropDownList("SelectedVehicleId", Model.GetVehicleOptions(), new { @id = "SelectedVehicleId" })
                    @foreach (var vehicle in Model.Vehicles)
                    {
                        <input type="hidden" id="@string.Concat("IsVehicle", vehicle.Id.ToString())" value="@vehicle.IsVehicle" />
                    }
                </td>
                <td>Fuel Left Begning of the Day</td>
                <td><input type="text" id="FuelLeftBegningOfDay" name="FuelLeftBegningOfDay" /> L</td>
            </tr>
            <tr>
                <td>Day Start Time</td>
                <td><input type="text" id="DayStartime" name="DayStartime" class="timepick" value="" /></td>
                <td>Day End Time</td>
                <td><input type="text" id="DayEndTime" name="DayEndTime" class="timepick" value="" /></td>
            </tr>
        </table>
    </div>
    <br />
    <div id="PumpStationInfo">
        @Html.Partial("_Pumpstations", Model)
    </div>
    <br />
    <div id="LubricantInfo">
        @Html.Partial("_Lubricants", Model)
    </div>
    <br />
    <div id="ChartItems">
        @Html.Partial("_ChartItems", Model)
    </div>
    <br />
    <div id="Statistics">
        <table>
            <tr>
                <td>Fuel Left End of the Day</td>
                <td>Fuel Usage of the Day</td>
                @*<td>&nbsp;</td>*@
            </tr>
            <tr>
                <td><input type="text" id="FuelLeftEndOfDay" name="FuelLeftEndOfDay" /></td>
                <td><input type="text" id="FuelUsageOfDay" name="FuelUsageOfDay" /></td>
                @*<td><input type="button" value="Calculate Values" /></td>*@
            </tr>
        </table>
        <table>
            <tr>
                <td>Daily Note</td>
            </tr>
            <tr>
                <td><textarea rows="5" cols="27" id="DailyNote" name="DailyNote"></textarea></td>
            </tr>
        </table>
    </div>
    <br />
    <div id="Authorization">
        <input type="submit" value="Send to Approve" />
    </div>
}