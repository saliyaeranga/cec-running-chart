@model CECRunningChart.Web.Models.Vehicle.VehicleModel
@{
    ViewBag.Title = "Create New Vehicle";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#VehicleOrMachine").focus();

        $("#IsHiredVehicle").change(function () {
            if ($(this).is(":checked")) {
                $("#HiredVehicle").show("slow");
            }
            else {
                $("#HiredVehicle").hide("slow");
                $("#HireRate").val("");
                $("#OwnerName").val("");
            }
        });

        $.validator.addMethod("selectVehicleType", function (value, element) {
            return value > 0;
        }, "*");

        $.validator.addMethod("selectFuelType", function (value, element) {
            return value > 0;
        }, "Please select a fuel type");

        $.validator.addMethod("selectLubricantType", function (value, element) {
            return value > 0;
        }, "Please select a lubricant type");

        $.validator.addMethod("enterOwnerName", function (value, element) {
            if (!$('#IsHiredVehicle').is(':checked')) {
                return true;
            }
            else {
                return value != "";
            }
        }, "*");

        $("#vehicleform").validate({
            rules: {
                VehicleNumber: {
                    required: true,
                    maxlength: 50
                },
                CompanyCode: {
                    required: true,
                    maxlength: 50
                },
                DriverOperatorName: {
                    required: true,
                    maxlength: 200
                },
                FuelUsage: {
                    required: true,
                    number: true
                },
                HireRate: {
                    required: true,
                    number: true
                },
                VehicleTypeId: {
                    selectVehicleType: true
                },
                FuelTypeId: {
                    selectFuelType: true
                },
                LubricantTypeId: {
                    selectLubricantType: true
                },
                OwnerName: {
                    maxlength: 200,
                    enterOwnerName: true
                }
            },
            messages: {
                VehicleNumber: "*",
                CompanyCode: "*",
                DriverOperatorName: "*",
                FuelUsage: "*",
                HireRate: "*",
                VehicleTypeId: "*",
                FuelTypeId: "*",
                LubricantTypeId: "*",
                OwnerName: "*"
            }
        });
    });
</script>
@using (Html.BeginForm("Create", "Vehicle", FormMethod.Post, new { @id = "vehicleform" }))
{
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>Create New Vehicle</legend>
        <div class="row">
            <div class="wrapper" style="width: 100px;">
                <div class="editor-label">
                    @Html.LabelFor(model => model.IsVehicle)
                </div>
                <div class="editor-field">
                    <select data-val="true" data-val-number="The field VehicleOrMachine must be a number." data-val-required="The VehicleOrMachine field is required." id="VehicleOrMachine" name="VehicleOrMachine" class="valid">
                        <option selected="selected" value="1">Vehicle</option>
                        <option value="0">Machine</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.IsVehicle)
                </div>
            </div>
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.VehicleNumber)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.VehicleNumber)
                    @Html.ValidationMessageFor(model => model.VehicleNumber)
                </div>
            </div>
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.CompanyCode)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.CompanyCode)
                    @Html.ValidationMessageFor(model => model.CompanyCode)
                </div>
            </div>
            <div class="wrapper">
                <div class="editor-label">
                    Vehicle Type
                </div>
                <div class="editor-field">
                    @Html.DropDownList("VehicleTypeId", Model.GetAvailableVehicleTypeOptions())
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper" style="width: 100px;">
                <div class="editor-label">
                    @Html.LabelFor(model => model.IsHiredVehicle)
                </div>
                <div class="editor-field">
                    @Html.CheckBoxFor(model => model.IsHiredVehicle, new { @id = "IsHiredVehicle" })
                    @Html.ValidationMessageFor(model => model.IsHiredVehicle)
                </div>
            </div>
            <div id="HiredVehicle" style="display: none;" class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.OwnerName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.OwnerName)
                    @Html.ValidationMessageFor(model => model.OwnerName)
                </div>
            </div>
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.HireRate)
                </div>
                <div class="editor-field">
                    @{ string hireRate = Model.HireRate == decimal.Zero ? string.Empty : Model.HireRate.ToString(); }
                    @Html.TextBox("HireRate", hireRate)
                    @Html.ValidationMessageFor(model => model.HireRate)
                </div>
            </div>
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.DriverOperatorName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.DriverOperatorName)
                    @Html.ValidationMessageFor(model => model.DriverOperatorName)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    Fuel Type
                </div>
                <div class="editor-field fuelType">
                    @Html.DropDownList("FuelTypeId", Model.GetAvailableFuelOptions())
                </div>
            </div>
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.FuelUsage)
                </div>
                <div class="editor-field">
                    @{ string fuelUsage = Model.FuelUsage == 0 ? string.Empty : Model.FuelUsage.ToString(); }
                    @Html.TextBox("FuelUsage", fuelUsage)
                    @Html.ValidationMessageFor(model => model.FuelUsage)
                </div>
            </div>
            <div class="wrapper">
                <div class="editor-label">
                    Lubricant Type
                </div>
                <div class="editor-field">
                    @Html.DropDownList("LubricantTypeId", Model.GetAvailableLubricantOptions())
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Description)
                </div>
                <div class="editor-field discripton">
                    @Html.TextAreaFor(model => model.Description)
                    @Html.ValidationMessageFor(model => model.Description)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Status)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status)
                </div>
            </div>
        </div>
        <div class="row">
            <input class="createBtn" type="submit" value="Create" />
        </div>
    </fieldset>
}
<div class="bckBtn">
    @Html.ActionLink("Back to List", "Index")
</div>
