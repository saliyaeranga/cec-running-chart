@model CECRunningChart.Web.Models.Vehicle.VehicleModel

@{
    ViewBag.Title = "Edit Vehicle";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#VehicleNumber").focus();

        $("#IsHiredVehicle").change(function () {
            if ($(this).is(":checked")) {
                $("#HiredVehicle").show("slow");
            }
            else {
                $("#HiredVehicle").hide("slow");
                $("#HireRate").val("");
                $("#OwnerName").val("");
            }
        });

        $.validator.addMethod("selectVehicleType", function (value, element) {
            return value > 0;
        }, "Please select a vehicle type");

        $.validator.addMethod("selectFuelType", function (value, element) {
            return value > 0;
        }, "Please select a fuel type");

        $.validator.addMethod("selectLubricantType", function (value, element) {
            return value > 0;
        }, "Please select a lubricant type");

        $("#vehicleeditform").validate({
            rules: {
                VehicleNumber: {
                    required: true,
                    maxlength: 50
                },
                CompanyCode: {
                    required: true,
                    maxlength: 50
                },
                DriverOperatorName: {
                    required: true,
                    maxlength: 200
                },
                FuelUsage: {
                    required: true,
                    number: true
                },
                HireRate: {
                    required: true,
                    number: true
                },
                VehicleTypeId: {
                    selectVehicleType: true
                },
                FuelTypeId: {
                    selectFuelType: true
                },
                LubricantTypeId: {
                    selectLubricantType: true
                },
                OwnerName: {
                    maxlength: 200
                }
            }
        });
    });
</script>

@using (Html.BeginForm("Edit", "Vehicle", FormMethod.Post, new { @id = "vehicleeditform" }))
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Edit Vehicle</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.VehicleNumber)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.VehicleNumber)
            @Html.ValidationMessageFor(model => model.VehicleNumber)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.CompanyCode)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CompanyCode)
            @Html.ValidationMessageFor(model => model.CompanyCode)
        </div>

        <div class="editor-label">
            Vehicle Type
        </div>
        <div class="editor-field">
            @Html.DropDownList("VehicleTypeId", Model.GetAvailableVehicleTypeOptions())
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.DriverOperatorName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.DriverOperatorName)
            @Html.ValidationMessageFor(model => model.DriverOperatorName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FuelUsage)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FuelUsage)
            @Html.ValidationMessageFor(model => model.FuelUsage)
        </div>

        <div class="editor-label">
            Fuel Type
        </div>
        <div class="editor-field">
            @Html.DropDownList("FuelTypeId", Model.GetAvailableFuelOptions())
        </div>

        <div class="editor-label">
            Lubricant Type
        </div>
        <div class="editor-field">
            @Html.DropDownList("LubricantTypeId", Model.GetAvailableLubricantOptions())
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.HireRate)
        </div>
        <div class="editor-field">
            @{ string hireRate = Model.HireRate == decimal.Zero ? string.Empty : Model.HireRate.ToString(); }
            @Html.TextBox("HireRate", hireRate)
            @Html.ValidationMessageFor(model => model.HireRate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsHiredVehicle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsHiredVehicle)
            @Html.ValidationMessageFor(model => model.IsHiredVehicle)
        </div>

        @{ string ownerStyle = string.IsNullOrWhiteSpace(Model.OwnerName) ? "display: none;" : "display: block;";}
        <div id="HiredVehicle" style="@ownerStyle">
            <div class="editor-label">
                @Html.LabelFor(model => model.OwnerName)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.OwnerName)
                @Html.ValidationMessageFor(model => model.OwnerName)
            </div>
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.IsVehicle)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.IsVehicle)
            @Html.ValidationMessageFor(model => model.IsVehicle)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Status)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Status)
            @Html.ValidationMessageFor(model => model.Status)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
