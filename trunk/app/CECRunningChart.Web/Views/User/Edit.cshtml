@model CECRunningChart.Web.Models.User.UserModel
@{
    ViewBag.Title = "Edit";
}
@*<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
*@
<script type="text/javascript">
    $(document).ready(function () {
        $("#Role").val($("#SelectedRole").val());
    });
</script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Edit User</legend>
        @Html.HiddenFor(model => model.Id)
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserName)
                </div>
                <div class="editor-field displayStyles">
                    @Html.DisplayFor(model => model.UserName)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.NICNumber)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.NICNumber)
                    @Html.ValidationMessageFor(model => model.NICNumber)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    Role
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Role", Model.GetUserRoleOptions(), new { @id = "Role" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.IsActiveUser)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.IsActiveUser)
                    @Html.ValidationMessageFor(model => model.IsActiveUser)
                </div>
            </div>
        </div>
        <div class="row">
            <input class="createBtn" type="submit" value="Save" />
        </div>
    </fieldset>
}
@{int selectedRole = (int)Model.Role;}
<input type="hidden" id="SelectedRole" value="@selectedRole" />
<div class="bckBtn">
    @Html.ActionLink("Back to List", "Index")
</div>
