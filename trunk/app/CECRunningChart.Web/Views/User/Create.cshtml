@model CECRunningChart.Web.Models.User.UserModel
@{
    ViewBag.Title = "Create User";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $("#FirstName").focus();

        $("#userform").validate({
            rules: {
                FirstName: {
                    required: true
                },
                UserName: {
                    required: true
                },
                Password: {
                    required: true
                }
            },
            messages: {
                FirstName: " *",
                UserName: " *",
                Password: " *"
            }
        });
    });
</script>
<div class="bckBtn">
    @Html.ActionLink("Back to List", "Index")
</div>
<br /><br />
@using (Html.BeginForm("create", "user", FormMethod.Post, new { @id = "userform" }))
{
    @Html.ValidationSummary(false)
    <fieldset>
        <legend>Create New User</legend>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.FirstName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.FirstName)
                    @Html.ValidationMessageFor(model => model.FirstName)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.LastName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.LastName)
                    @Html.ValidationMessageFor(model => model.LastName)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.UserName)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.UserName)
                    @Html.ValidationMessageFor(model => model.UserName)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Password)
                </div>
                <div class="editor-field">
                    <input class="text-box single-line valid" id="Password" name="Password" type="password" />
                    @Html.ValidationMessageFor(model => model.Password)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.NICNumber)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.NICNumber)
                    @Html.ValidationMessageFor(model => model.NICNumber)
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    Role
                </div>
                <div class="editor-field">
                    @Html.DropDownList("Role", Model.GetUserRoleOptions(), new { @id = "Role", @class = "todo" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="wrapper">
                <div class="editor-label">
                    @Html.LabelFor(model => model.IsActiveUser)
                </div>
                <div class="editor-field">
                    @Html.EditorFor(model => model.IsActiveUser)
                    @Html.ValidationMessageFor(model => model.IsActiveUser)
                </div>
            </div>
        </div>
        <div class="row">
            <input class="createBtn" type="submit" value="Create" />
        </div>
    </fieldset>
}